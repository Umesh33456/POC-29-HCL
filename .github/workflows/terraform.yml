name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      TF_ROOT: ./root
      AWS_REGION: ap-south-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5  # or your preferred version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<GITHUB_ROLE_NAME>  # optional if using OIDC
          aws-region: ${{ env.AWS_REGION }}
          # or alternatively, use secrets
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: terraform init

      - name: Terraform Format
        working-directory: ${{ env.TF_ROOT }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.TF_ROOT }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_ROOT }}/tfplan

      - name: Terraform Apply (only on main branch)
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_ROOT }}
        run: terraform apply -auto-approve tfplan
